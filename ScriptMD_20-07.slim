// set up a simple neutral simulation
initialize() {
	// set the overall mutation rate
	initializeMutationRate(mu);
	// m1 mutation type: neutral
	initializeMutationType("m10", h, "f",s ); //mutation sampled among a gamma dsitribution
	initializeMutationType("m2", 0.5, "f", 0);// mutation defining mating type locus 1
	initializeMutationType("m4", 0.5, "f", 0);// mutation defining inversion 1

	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m10,1); //mutation with different dominance appear with equal probability

	// uniform chromosome of length 200Mb for two chromosome
	initializeGenomicElement(g1, 0,199999);


	// uniform recombination along two chromosomes
	rates=c(r, 0.5, r);//Two chromosomes with R=1e-8	
    ends=c(99999,100000,199999); //Two chromosome of size 100000000	
	initializeRecombinationRate(rates, ends);
}
// create a population of 500 individuals
1 {
	sim.addSubpop("p1", N);
}

1 late() { //using late() just to avoid drift the first generation
	sim.subpopulations.individuals.genome1.addNewDrawnMutation(m2, 50000); // Introduce in this population the sex mutation at locus 1. 
	}

2:115000	modifyChild(p1) { //simulating the meeting between two gamete and fecondation depand on their genotype
	Gamete1MT = childGenome1.containsMarkerMutation(m2, 50000, returnMutation=T); //Checking the MT of the 1 gamete for the locus 1
	Gamete2MT = childGenome2.containsMarkerMutation(m2, 50000, returnMutation=T); //Checking the MT of the 1 gamete for the locus 1
	if (identical(Gamete1MT, Gamete2MT)){ //check the difference a the first locus
			return F;} 
	return T;
}

2:115000 early(){
if( sim.generation % 100 == 0)
 {
	catn(sim.generation);
}

}

115000 late() {

sim.simulationFinished();
}

